{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Makers-JS25.2\\\\React\\\\lesson-5\\\\src\\\\App.js\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API = \"https://rickandmortyapi.com/api/character\";\nconst App = () => {\n  //! fetch\n  // let info = fetch(API);\n  // info.then(res => res.json()).then(data => console.log(data));\n\n  //! axios\n  // let info = axios.get(API);\n  // info.then(res => console.log(res.data)).catch(error => console.log(error));\n\n  async function getApiAsync() {\n    try {\n      let info = await axios(API);\n      console.log(info);\n    } catch (error) {\n      return error;\n    }\n  }\n  getApiAsync();\n\n  //? async ... await - работает только с функциями. await не работает без async.Async ставиться передфункцией, объявляет что функция будет асинхронной. await говорит о том, что будет ждать ответ на наш запрос, до тех пор пока не придет успешный результат.  Прокручивает время ожидания (pending).\n  //? try...catch - конструкция при которой код внутри catch сработает только в том случае, если код внутри try выдало ошибку.\n\n  // console.log(age);\n  // console.log(\"Выйдет или нет\");\n  // try {\n  //   console.log(age);\n  // } catch {\n  //   console.log(\"Выйдет или нет\");\n  // }\n\n  // let a = 3;\n  // let b = 5;\n  // try {\n  //   console.log(a + c);\n  // } catch {\n  //   console.log(\"Ошбика номер 6205\");\n  // }\n\n  // try {\n  //   let a = 3;\n  //   let b = 4;\n  //   console.log(a + b);\n  // } catch {\n  //   console.log(\"hhhh\");\n  // }\n\n  const asyncFunc = async () => {\n    console.log(1111);\n  };\n  const syncFunc = () => {\n    console.log(1111);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","React","API","App","getApiAsync","info","console","log","error","asyncFunc","syncFunc"],"sources":["C:/Users/user/Desktop/Makers-JS25.2/React/lesson-5/src/App.js"],"sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\n\nconst API = \"https://rickandmortyapi.com/api/character\";\n\nconst App = () => {\n  //! fetch\n  // let info = fetch(API);\n  // info.then(res => res.json()).then(data => console.log(data));\n\n  //! axios\n  // let info = axios.get(API);\n  // info.then(res => console.log(res.data)).catch(error => console.log(error));\n\n  async function getApiAsync() {\n    try {\n      let info = await axios(API);\n      console.log(info);\n    } catch (error) {\n      return error;\n    }\n  }\n  getApiAsync();\n\n  //? async ... await - работает только с функциями. await не работает без async.Async ставиться передфункцией, объявляет что функция будет асинхронной. await говорит о том, что будет ждать ответ на наш запрос, до тех пор пока не придет успешный результат.  Прокручивает время ожидания (pending).\n  //? try...catch - конструкция при которой код внутри catch сработает только в том случае, если код внутри try выдало ошибку.\n\n  // console.log(age);\n  // console.log(\"Выйдет или нет\");\n  // try {\n  //   console.log(age);\n  // } catch {\n  //   console.log(\"Выйдет или нет\");\n  // }\n\n  // let a = 3;\n  // let b = 5;\n  // try {\n  //   console.log(a + c);\n  // } catch {\n  //   console.log(\"Ошбика номер 6205\");\n  // }\n\n  // try {\n  //   let a = 3;\n  //   let b = 4;\n  //   console.log(a + b);\n  // } catch {\n  //   console.log(\"hhhh\");\n  // }\n\n  const asyncFunc = async () => {\n    console.log(1111);\n  };\n  const syncFunc = () => {\n    console.log(1111);\n  };\n\n  return <div></div>;\n};\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,GAAG,GAAG,2CAA2C;AAEvD,MAAMC,GAAG,GAAG,MAAM;EAChB;EACA;EACA;;EAEA;EACA;EACA;;EAEA,eAAeC,WAAW,GAAG;IAC3B,IAAI;MACF,IAAIC,IAAI,GAAG,MAAML,KAAK,CAACE,GAAG,CAAC;MAC3BI,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACd,OAAOA,KAAK;IACd;EACF;EACAJ,WAAW,EAAE;;EAEb;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMK,SAAS,GAAG,YAAY;IAC5BH,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;EACnB,CAAC;EACD,MAAMG,QAAQ,GAAG,MAAM;IACrBJ,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,oBAAO;IAAA;IAAA;IAAA;EAAA,QAAW;AACpB,CAAC;AAAC,KAtDIJ,GAAG;AAwDT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}
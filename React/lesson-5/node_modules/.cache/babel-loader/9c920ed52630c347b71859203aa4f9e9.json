{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Makers-JS25.2\\\\React\\\\lesson-5\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { logDOM } from \"@testing-library/react\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API = \"https://rickandmortyapi.com/api/character\";\nconst App = () => {\n  _s();\n  //! fetch\n  // let info = fetch(API);\n  // info.then(res => res.json()).then(data => console.log(data));\n\n  //! axios\n  // let info = axios.get(API);\n  // info.then(res => console.log(res.data)).catch(error => console.log(error));\n\n  // async function getApiAsync() {\n  //   try {\n  //     let info = await axios(API);\n  //     console.log(info);\n  //   } catch (error) {\n  //     return error;\n  //   }\n  // }\n  // getApiAsync();\n\n  //? async ... await - работает только с функциями. await не работает без async.Async ставиться передфункцией, объявляет что функция будет асинхронной. await говорит о том, что будет ждать ответ на наш запрос, до тех пор пока не придет успешный результат.  Прокручивает время ожидания (pending).\n  //? try...catch - конструкция при которой код внутри catch сработает только в том случае, если код внутри try выдало ошибку.\n\n  // console.log(age);\n  // console.log(\"Выйдет или нет\");\n  // try {\n  //   console.log(age);\n  // } catch {\n  //   console.log(\"Выйдет или нет\");\n  // }\n\n  // let a = 3;\n  // let b = 5;\n  // try {\n  //   console.log(a + c);\n  // } catch {\n  //   console.log(\"Ошбика номер 6205\");\n  // }\n\n  // try {\n  //   let a = 3;\n  //   let b = 4;\n  //   console.log(a + b);\n  // } catch {\n  //   console.log(\"hhhh\");\n  // }\n\n  // const asyncFunc = async () => {\n  //   console.log(1111);\n  // };\n  // const syncFunc = () => {\n  //   console.log(2222);\n  // };\n\n  // asyncFunc();\n  // syncFunc();\n  const [info, setInfo] = useState([]);\n  async function getRickiAndMorty() {\n    try {\n      let {\n        data\n      } = await axios(API);\n      // console.log(data.results);\n      const arr = data.results;\n      arr.forEach(item => {\n        setInfo(item);\n      });\n    } catch (err) {\n      return err;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getRickiAndMorty,\n      children: \"GET\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"l80jYxdl7J+jIlUBq0OVxeu4AEE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logDOM","axios","React","useState","API","App","info","setInfo","getRickiAndMorty","data","arr","results","forEach","item","err"],"sources":["C:/Users/user/Desktop/Makers-JS25.2/React/lesson-5/src/App.js"],"sourcesContent":["import { logDOM } from \"@testing-library/react\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\n\nconst API = \"https://rickandmortyapi.com/api/character\";\n\nconst App = () => {\n  //! fetch\n  // let info = fetch(API);\n  // info.then(res => res.json()).then(data => console.log(data));\n\n  //! axios\n  // let info = axios.get(API);\n  // info.then(res => console.log(res.data)).catch(error => console.log(error));\n\n  // async function getApiAsync() {\n  //   try {\n  //     let info = await axios(API);\n  //     console.log(info);\n  //   } catch (error) {\n  //     return error;\n  //   }\n  // }\n  // getApiAsync();\n\n  //? async ... await - работает только с функциями. await не работает без async.Async ставиться передфункцией, объявляет что функция будет асинхронной. await говорит о том, что будет ждать ответ на наш запрос, до тех пор пока не придет успешный результат.  Прокручивает время ожидания (pending).\n  //? try...catch - конструкция при которой код внутри catch сработает только в том случае, если код внутри try выдало ошибку.\n\n  // console.log(age);\n  // console.log(\"Выйдет или нет\");\n  // try {\n  //   console.log(age);\n  // } catch {\n  //   console.log(\"Выйдет или нет\");\n  // }\n\n  // let a = 3;\n  // let b = 5;\n  // try {\n  //   console.log(a + c);\n  // } catch {\n  //   console.log(\"Ошбика номер 6205\");\n  // }\n\n  // try {\n  //   let a = 3;\n  //   let b = 4;\n  //   console.log(a + b);\n  // } catch {\n  //   console.log(\"hhhh\");\n  // }\n\n  // const asyncFunc = async () => {\n  //   console.log(1111);\n  // };\n  // const syncFunc = () => {\n  //   console.log(2222);\n  // };\n\n  // asyncFunc();\n  // syncFunc();\n  const [info, setInfo] = useState([]);\n  async function getRickiAndMorty() {\n    try {\n      let { data } = await axios(API);\n      // console.log(data.results);\n      const arr = data.results;\n      arr.forEach(item => {\n        setInfo(item);\n      });\n    } catch (err) {\n      return err;\n    }\n  }\n\n  return (\n    <>\n      <button onClick={getRickiAndMorty}>GET</button>\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,wBAAwB;AAC/C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAExC,MAAMC,GAAG,GAAG,2CAA2C;AAEvD,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACpC,eAAeK,gBAAgB,GAAG;IAChC,IAAI;MACF,IAAI;QAAEC;MAAK,CAAC,GAAG,MAAMR,KAAK,CAACG,GAAG,CAAC;MAC/B;MACA,MAAMM,GAAG,GAAGD,IAAI,CAACE,OAAO;MACxBD,GAAG,CAACE,OAAO,CAACC,IAAI,IAAI;QAClBN,OAAO,CAACM,IAAI,CAAC;MACf,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,OAAOA,GAAG;IACZ;EACF;EAEA,oBACE;IAAA,uBACE;MAAQ,OAAO,EAAEN,gBAAiB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAa,iBAC9C;AAEP,CAAC;AAAC,GA1EIH,GAAG;AAAA,KAAHA,GAAG;AA4ET,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}